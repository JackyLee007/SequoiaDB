<!-- ============================================================================
@description:  exec c or cpp testcase
@parameter:    TESTCASE_TYPE          eg: tdd_c
               testcase_dir           eg: /tmp/ci/testcase/tdd/c
               report_dir             egï¼š/tmp/ci/report/tdd_c
@author:       Ting YU 2016-11-1
============================================================================= -->

<project default="exec_testcase" basedir="../../../">     
   <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
         <pathelement location="${basedir}/lib/ant-contrib-1.0b3.jar" />
      </classpath>
   </taskdef>
   <import file="${basedir}/src/test/exec_testcase/common.xml" />
   
   
   <target name="exec_testcase">
      <property file="${basedir}/src/conf/test.conf" />
      <property name="sdbshell_fullname" value="${INSTALL_DIR}/bin/sdb" /> 
      
      <mkdir dir="${report_dir}"/>
      <chmod dir="${testcase_dir}" perm="u+x" includes="*" />

      <for param="casefullname">
         <path>
            <fileset dir="${testcase_dir}" includes="*" excludes=""/>
         </path>
         <sequential> 
            <markinlog casename ="@{casefullname}" marktype="begin" sdbshell="${sdbshell_fullname}"/>
            
            <var name="testcase_name" unset="true" />
            <basename property="testcase_name" file="@{casefullname}"/>
            <propertyregex property="testcase_name" input="${testcase_name}" defaultValue="${testcase_name}"
                           regexp="\." replace="_" override="true"/>           
            <hostinfo prefix="host" />
            <var name="report_fullname" value="${report_dir}/${testcase_name}_${host.NAME}.xml"/>
            
            <execonecase casefullname="@{casefullname}"
                           dbdir="${INSTALL_DIR}" 
                           report="${report_fullname}"/>
            <modifyreport report="${report_fullname}" layer="${TESTCASE_TYPE}.${testcase_name}" />
            
            <markinlog casename ="@{casefullname}" marktype="end" sdbshell="${sdbshell_fullname}"/>
         </sequential>
      </for>
      
   </target>
   
   <macrodef name="execonecase">
      <attribute name="dbdir"/>
      <attribute name="casefullname" />   
      <attribute name="report" />
      <sequential>
         <var name="begin_time" unset="true"/>
         <tstamp>
            <format property="begin_time" pattern="yyyy-MM-dd_HH:mm:ss" />
         </tstamp>

         <var name="cmd" value="--gtest_filter=* --gtest_output=xml:@{report}"/>   
         <echo message="${line.separator}exec cmd: @{casefullname} ${cmd}"/>
         
         <var name="testcase_dir" unset="true"/>
         <dirname property="testcase_dir" file="@{casefullname}" />         
         <var name="screen_output" unset="true"/>
         <var name="rc" unset="true"/>
         <exec executable="@{casefullname}" 
               dir="${testcase_dir}" 
               timeout="1200000" 
               outputproperty="screen_output" 
               resultproperty="rc" 
               failonerror="false" >
            <arg line="${cmd}"/>
            <env key="LD_LIBRARY_PATH" path="${LD_LIBRARY_PATH}:@{dbdir}/lib" />
         </exec>
         <echo message="${screen_output}" />
         
         <var name="end_time" unset="true"/>
         <tstamp>
            <format property="end_time" pattern="yyyy-MM-dd_HH:mm:ss" />
         </tstamp>
         <echo message="begin at ${begin_time}, end at ${end_time}" />
         
      </sequential>
   </macrodef>

 
   <macrodef name="modifyreport">
      <attribute name="report"/>
      <attribute name="layer" />
      <sequential>                
         <replaceregexp file="@{report}"
                        match='classname="(.*)"' 
                        replace='classname="@{layer}"' 
                        flags="g" 
                        byline="true" 
                        encoding="utf-8"> 
         </replaceregexp>
      </sequential>
   </macrodef>
   
</project>