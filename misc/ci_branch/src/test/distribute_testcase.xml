<project basedir="../../">  
   <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
         <pathelement location="${basedir}/lib/ant-contrib-1.0b3.jar" />
      </classpath>
   </taskdef>
   
   <!--delete other type of testcase-->  
   <macrodef name="filtercase">
      <attribute name="casedir"/>
      <attribute name="testtype" default="normal_test"/>
      <sequential>
         <var name="total_conf" unset="true"/>
         <loadfile property="total_conf" srcFile="@{casedir}/testcase.conf" failonerror="false"/>
         
         <if>
            <contains string="${total_conf}" substring="No filtering testcase"/>
         <else>   
            <var name="large_data_list" unset="true"/>
            <var name="sync_list" unset="true"/>
            <var name="configure_list" unset="true"/> 
            <var name="reliability_list" unset="true"/>
            <var name="common_list" unset="true"/>         
            <property file="@{casedir}/testcase.conf"/>

            <switch value="@{testtype}">
            
               <case value="normal_test">
                  <for list="${large_data_list},${sync_list},${configure_list},${reliability_list}" param="feature">
                     <sequential>
                        <delete dir="@{casedir}/@{feature}" failonerror="false"/>                     
                        <delete file="@{casedir}/@{feature}" failonerror="false"/>
                        <delete file="@{casedir}/@{feature}.static" failonerror="false"/>
                     </sequential>
                  </for>
               </case>
               
               <case value="largedata_test">
                  <var name="excludelist" unset="true" />
                  <var name="excludelist" value="" />
                  <for list="${large_data_list}" param="feature">
                     <sequential>
                        <var name="excludepathfile" value="@{feature}/**/*,@{feature}" />
                        <var name="excludelist" value="${excludelist},${excludepathfile}"/>
                     </sequential>
                  </for>
                  <for list="${common_list}" param="feature">
                     <sequential>
                        <var name="excludepathfile" value="@{feature}/**/*,@{feature}" />
                        <var name="excludelist" value="${excludelist},${excludepathfile}"/>
                     </sequential>
                  </for>
                  <delete includeEmptyDirs="true">
                     <fileset dir="@{casedir}" excludes="testcase.conf,${excludelist}"/>
                  </delete>
               </case>
               
               <default/>
               
            </switch>
            
            <delete includeEmptyDirs="true" failonerror="false"><!--java directory did not have testcase.conf  tmp-->
               <fileset dir="@{casedir}" includes="testcase.conf"/>
            </delete>
            <delete includeEmptyDirs="true" failonerror="false"><!--delete empty directory-->
               <fileset dir="@{casedir}" >
                  <and>
                     <size value="0"/>
                     <type type="dir"/>
                  </and>
               </fileset>       
            </delete>
            
         </else>
         </if>
         
      </sequential>
   </macrodef>
   
   <macrodef name="arraylen">        
      <attribute name="array"/>
      <attribute name="len"/>         
      <sequential>           
         <var name="@{len}" value="0"/>
         <for list="@{array}" param="ele" parallel="false">
            <sequential>                 
               <math result="@{len}" operand1="${@{len}}" operation="+" operand2="1" datatype="int"/>
            </sequential>
         </for>
      </sequential>
   </macrodef>
      
   <macrodef name="dividecase">
      <attribute name="basedir"/>
      <attribute name="reltdir"/>
      <attribute name="outputdir"/>
      <attribute name="hostlist"/>
      <element name="dividedfileele"/>
      <element name="commonfileele"/>
      <sequential>
         <var name="testcase_dir" value="@{basedir}/@{reltdir}" />
         <!--1.calculate file number-->
         <arraylen array="@{hostlist}" len="part_num"/>
         <path id="divided_path">
            <dividedfileele/>              
         </path>      
         <var name="total_filenum" unset="true" />
         <resourcecount property="total_filenum">
            <path refid="divided_path" />
         </resourcecount>

         <math result="part_filenum" 
               operand1="${total_filenum}" 
               operation="/" 
               operand2="${part_num}" 
               datatype="int"/>
         <echo>total_filenum:${total_filenum}, partnum:${part_num}, part_filenum:${part_filenum}</echo>
         
         <!--2.divide a set of files into parts-->        
         <if>
            <equals arg1="${total_filenum}" arg2="0" />
            <then/>
            <else>
               <var name="i" value="0"/>
               <for list="@{hostlist}" param="testhost" parallel="false">
                  <sequential>            
                     <math result="i" operand1="${i}" operation="+" operand2="1" datatype="int"/>
                     <var name="outputdir" value="@{outputdir}/testcase_@{testhost}" />          
                     <mkdir dir="${outputdir}/"/>           
                     <if>
                        <equals arg1="${i}" arg2="${part_num}" />
                        <then><!--in last part, just move directory-->
                           <move todir="${outputdir}">
                              <fileset dir="@{basedir}">
                                 <include name="@{reltdir}/**/*" />
                              </fileset>
                           </move>
                        </then>
                        <else>
                           <timestampselector outputsetid="part_path" count="${part_filenum}" >
                              <path refid="divided_path" />
                           </timestampselector>                     
                           <var name="tmp_dir" value="${outputdir}_tmp" />
                           <mkdir dir="${tmp_dir}/"/>                  
                           <move todir="${tmp_dir}" overwrite="true" flatten="false" >
                              <path refid="part_path" />
                           </move>
                           <copy todir="${tmp_dir}/${testcase_dir}" overwrite="true" >
                              <commonfileele/>
                           </copy>
                           <echo>${outputdir}</echo>
                           <echo>${tmp_dir}/@{basedir}</echo>
                           <move todir="${outputdir}">
                              <fileset dir="${tmp_dir}/@{basedir}"/>
                           </move>
                           <delete dir="${tmp_dir}" />
                        </else>
                     </if>
                  </sequential>
               </for>
            </else>
         </if>
      </sequential>
   </macrodef>

   
</project>