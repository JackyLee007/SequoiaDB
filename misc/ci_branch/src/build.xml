<!-- ============================================================================
@description:  ci entry
@parameter:    DEPLOY_MODE: G1D3|G3D3|STANDALONE, from jenkins configure page
               NEED_INSTALL_DEPLOY: true|false, from jenkins build page
@author:       Ting YU 2016-10-19
============================================================================= -->

<project default="test_build" basedir="../">
   <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
         <pathelement location="${basedir}/lib/ant-contrib-1.0b3.jar" />
      </classpath>
   </taskdef>
   <include file="${basedir}/src/solve_result/get_build_status.xml" as="status_file"/>
   <property file="${basedir}/src/conf/test.conf" />
   
   <target name="normal_test_build">
      <antcallback target="check_parameter" return="NEED_INSTALL_DEPLOY, DEPLOY_MODE"/>
      
      <var name="TEST_TYPE" value="NORMALTEST"/>
      <getplatform resultProperty="plat_form"/>
      <propertycopy name="testhost_list" from="${plat_form}_${TEST_TYPE}_${DEPLOY_MODE}_HOST" /> 
      
      <if>
         <equals arg1="${NEED_INSTALL_DEPLOY}" arg2="true" />
         <then>
            <ant antfile="install_deploy.xml" dir="src/install_deploy" inheritAll="true" useNativeBaseDir="true" >
               <property name="TEST_TYPE" value="${TEST_TYPE}"/>
               <property name="testhost_list" value="${testhost_list}"/>
            </ant>
         </then>
      </if>
     
      <ant antfile="normal_test.xml" dir="src/test" inheritAll="true" useNativeBaseDir="true" >
         <property name="TEST_TYPE" value="${TEST_TYPE}"/>
         <property name="plat_form" value="${plat_form}"/>
      </ant>
            
       <ant antfile="env_detect.xml" dir="${basedir}/src/solve_result" useNativeBaseDir="true">
         <property name="TEST_TYPE" value="${TEST_TYPE}"/>
         <property name="DEPLOY_MODE" value="${DEPLOY_MODE}"/>
         <property name="plat_form" value="${plat_form}"/>
      </ant>
   
      <antcallback target="status_file.get_build_status" return="build_status"/>

      <if>
         <equals arg1="${BACKUP_LOG_WHEN_FAIL}" arg2="true" />
         <then>
            <if>
               <equals arg1="${build_status}" arg2="unstable" />
               <then>
                  <ant antfile="backup_log.xml" dir="src/solve_result" inheritAll="true" useNativeBaseDir="true" >
                     <property name="TEST_TYPE" value="${TEST_TYPE}"/>
                     <property name="DEPLOY_MODE" value="${DEPLOY_MODE}"/>
                     <property name="testhost_list" value="${testhost_list}"/>
                  </ant>
               </then>
            </if>
         </then>
      </if>
  
   </target>
   
   <target name="largedata_test_build">
      <var name="TEST_TYPE" value="LARGEDATATEST"/>
      <antcallback target="check_parameter" return="NEED_INSTALL_DEPLOY, DEPLOY_MODE"/>
      <getplatform resultProperty="plat_form"/>
      <propertycopy name="testhost_list" from="${plat_form}_${TEST_TYPE}_${DEPLOY_MODE}_HOST" />
      
      <if>
         <equals arg1="${NEED_INSTALL_DEPLOY}" arg2="true" />
         <then>
            <ant antfile="install_deploy.xml" dir="src/install_deploy" inheritAll="true" useNativeBaseDir="true" >
               <property name="TEST_TYPE" value="${TEST_TYPE}"/>
               <property name="testhost_list" value="${testhost_list}"/>
            </ant>
         </then>
      </if>
     
      <ant antfile="largedata_test.xml" dir="src/test" inheritAll="true" useNativeBaseDir="true" >
         <property name="TEST_TYPE" value="${TEST_TYPE}"/>
         <property name="plat_form" value="${plat_form}"/>
      </ant>
      
      <ant antfile="env_detect.xml" dir="${basedir}/src/solve_result" useNativeBaseDir="true">
         <property name="TEST_TYPE" value="${TEST_TYPE}"/>
         <property name="DEPLOY_MODE" value="${DEPLOY_MODE}"/>
         <property name="plat_form" value="${plat_form}"/>
      </ant>
   
      <antcallback target="status_file.get_build_status" return="build_status"/>

      <if>
         <equals arg1="${BACKUP_LOG_WHEN_FAIL}" arg2="true" />
         <then>
            <if>
               <equals arg1="${build_status}" arg2="unstable" />
               <then>
                  <ant antfile="backup_log.xml" dir="src/solve_result" inheritAll="true" useNativeBaseDir="true" >
                     <property name="TEST_TYPE" value="${TEST_TYPE}"/>
                     <property name="DEPLOY_MODE" value="${DEPLOY_MODE}"/>
                     <property name="testhost_list" value="${testhost_list}"/>
                  </ant>
               </then>
            </if>
         </then>
      </if>
   
   </target>
   
   <target name="performance_tpcc_test_build">
      <antcallback target="check_parameter" return="UPDATE_DB_PACKAGE, UPDATE_PG_PACKAGE, 
                                                    SELECT_DB_PACKAGE, SELECT_PG_PACKAGE,
                                                    BACKUP_LOG_WHEN_FAIL"/>

      <var name="TEST_TYPE" value="PERFORMANCETEST_TPCC"/>
      <propertycopy name="testhost_list" from="${TEST_TYPE}_HOST" /> 
      
      <ant antfile="ready_package.xml" dir="src/install_deploy" inheritAll="true" useNativeBaseDir="true" >
         <property name="SELECT_DB_PACKAGE" value="${SELECT_DB_PACKAGE}"/>
         <property name="SELECT_PG_PACKAGE" value="${SELECT_PG_PACKAGE}"/>
      </ant>
      
      <if>
         <equals arg1="${UPDATE_DB_PACKAGE}" arg2="true" />
         <then>
            <ant antfile="install_deploy.xml" dir="src/install_deploy" inheritAll="true" useNativeBaseDir="true" >
               <property name="TEST_TYPE" value="${TEST_TYPE}"/>
               <property name="plat_form" value="${plat_form}"/>
            </ant>
         </then>
      </if>
      
      <if>
         <equals arg1="${UPDATE_PG_PACKAGE}" arg2="true" />
         <then>
            <ant antfile="install_deploy_pg.xml" dir="src/install_deploy" inheritAll="true" useNativeBaseDir="true" >
               <property name="testhost_list" value="${testhost_list}"/>
            </ant>
         </then>
      </if>

      <ant antfile="performance_tpcc_test.xml" dir="src/test" inheritAll="true" useNativeBaseDir="true" >
         <property name="WAREHOST_NUM" value="${WAREHOST_NUM}"/>
         <property name="CONCURRENT_NUM" value="${CONCURRENT_NUM}"/>
         <property name="RUN_TIME" value="${RUN_TIME}"/>
         <property name="testhost_list" value="${testhost_list}"/>
      </ant>
      
      <antcallback target="status_file.get_build_status" return="build_status"/>

      <if>
         <equals arg1="${BACKUP_LOG_WHEN_FAIL}" arg2="true" />
         <then>
            <if>
               <equals arg1="${build_status}" arg2="unstable" />
               <then>
                  <ant antfile="backup_log.xml" dir="src/solve_result" inheritAll="true" useNativeBaseDir="true" >
                     <property name="TEST_TYPE" value="${TEST_TYPE}"/>
                     <property name="testhost_list" value="${testhost_list}"/>
                  </ant>
               </then>
            </if>
         </then>
      </if>
   
   </target>
   
   <target name="compile_build">
      <getplatform resultProperty="plat_form"/>
      <ant antfile="compile_sequoiadb.xml" dir="src/compile" inheritAll="true" useNativeBaseDir="true" />
   </target>
   
   <target name="compile_doc_build">
      <ant antfile="compile_doc.xml" dir="src/compile" inheritAll="true" useNativeBaseDir="true" />
   </target>
   
   <target name="check_parameter">  
      <if>
         <isset property="NEED_INSTALL_DEPLOY"/>
         <else>           
            <var name="NEED_INSTALL_DEPLOY" value="true" />
         </else>
      </if>
      <if>
         <isset property="BACKUP_LOG_WHEN_FAIL"/>
         <else>           
            <var name="BACKUP_LOG_WHEN_FAIL" value="true" />
         </else>
      </if>
      <if>
         <isset property="DEPLOY_MODE"/>
         <else>
            <var name="DEPLOY_MODE" value="G3D3" />
         </else>
      </if>
      <if>
         <isset property="UPDATE_DB_PACKAGE"/>
         <else>           
            <var name="UPDATE_DB_PACKAGE" value="true" />
         </else>
      </if>
      <if>
         <isset property="UPDATE_PG_PACKAGE"/>
         <else>           
            <var name="UPDATE_PG_PACKAGE" value="true" />
         </else>
      </if>
      <if>
         <isset property="SELECT_DB_PACKAGE"/>
         <else>           
            <var name="SELECT_DB_PACKAGE" value="compile_db_trunk_release" />
         </else>
      </if>
      <if>
         <isset property="SELECT_PG_PACKAGE"/>
         <else>           
            <var name="SELECT_PG_PACKAGE" value="compile_pg_trunk_release" />
         </else>
      </if>
   </target>
   
   
   <macrodef name="getplatform">
      <attribute name="resultProperty"/>
      <sequential>
         <exec executable="uname" outputproperty="uname" failonerror="true" >
            <arg line="-i" />
         </exec>
         <var name="@{resultProperty}" value="unknown" unset="true"/>
         <condition property="@{resultProperty}" value="X86">
            <equals arg1="${uname}" arg2="x86_64" />
         </condition>
         <condition property="@{resultProperty}" value="PPC">
            <equals arg1="${uname}" arg2="ppc64" />
         </condition>
      </sequential>
   </macrodef>
   

</project>


